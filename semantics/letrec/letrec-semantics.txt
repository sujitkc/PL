FunDef
======

-----------------------------------------------------
env |- (fun arg -> body) --> closure(arg, body, env)

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

FunApp
======
env          |- e1 --> closure(arg, body, env')
env          |- e2 --> v2
env'[arg=v2] |- body --> v
---------------------------------------------------
env |- e1 e2 --> v

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

LetRec
======
env[vname = RecClosure(arg, body, env)] |- e1 --> v
----------------------------------------------------
env |- (let rec vname = fun arg -> body in e1) --> v

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ApplyFound
=====
 env |- x --> RecClosure(par, body, env')
---------------------------------------------------------
 apply(x, env) --> Closure(par, body, env'[x = RecClosure(par, body, env')])
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++ 
